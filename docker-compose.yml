services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./data:/app/data:rw
    ports:
      - 127.0.0.1:${PORT}:${PORT}
    healthcheck:
      test: [ "CMD-SHELL", "/app/healthcheck.sh" ]
      interval: 2s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"

  redis:
    image: redis:7.4-alpine
    restart: unless-stopped
    ports:
      - 127.0.0.1:${REDIS_PORT}:${REDIS_PORT}
    command: >
      redis-server --save 20 1 --loglevel warning
      --requirepass ${REDIS_PASSWORD} --port ${REDIS_PORT}
    volumes:
      - ./data/redis:/data
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"

  redis_admin:
    image: rediscommander/redis-commander:latest
    restart: unless-stopped
    ports:
      - 127.0.0.1:${REDIS_ADMIN_PORT}:8081
    environment:
      HTTP_USER: ${REDIS_ADMIN_USER}
      HTTP_PASSWORD: ${REDIS_ADMIN_PASSWORD}
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"

  db:
    image: postgres:17-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
      PGDATA: "/data/postgres"
    ports:
      - 127.0.0.1:${DATABASE_PORT}:${DATABASE_PORT}
    volumes:
      - ./data/postgres:/data/postgres
    command: -p ${DATABASE_PORT}
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"

  db_admin:
    image: dpage/pgadmin4:latest
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${DB_ADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${DB_ADMIN_PASSWORD}
    ports:
      - 127.0.0.1:${DB_ADMIN_PORT}:80
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"

  db_backup:
    build:
      context: .
      dockerfile: Dockerfile.database-backup
    environment:
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      BACKUP_DIR: /app/data/database_backups
      BACKUP_INTERVAL: 14400000 # 4 hours
      BACKUP_ROTATION: 20
      BACKUP_FORMAT: plain
      BACKUP_COMPRESS: true
    volumes:
      - ./data/database_backups:/app/data/database_backups
    restart: unless-stopped
    depends_on:
      - db
